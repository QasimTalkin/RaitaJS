@use 'sass:math';

$grid-cols:12;
$grid-gap:(
    '0':0,
    '1':10px,
    '2':20px,
    '3':30px
);
//base layout class
$layout-values: flex-start, flex-end, center, space-between, space-around;

.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
   box-sizing: border- box;
}

@each $key, $val in $grid-gap {
    .gap-#{$key} > * {
        padding: $val;
    }
    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}


@each $val in $layout-values {
    .justify-#{$val}{
        align-items: center;
        justify-content: $val;
    }
}

.row{
    display: flex;
    flex-flow: row wrap;
}

@include xs {
    @for $i from 1 through $grid-cols{
        .col-#{$i}-xs{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-cols);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-cols{
        .col-#{$i}-sm{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-cols);
        }
    }
}

@include md {
    @for $i from 1 through $grid-cols{
        .col-#{$i}-md{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-cols);
        }
    }
}


@include lg {
    @for $i from 1 through $grid-cols{
        .col-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-cols);
        }
    }
}


@include xl {
    @for $i from 1 through $grid-cols{
        .col-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-cols);
        }
    }
}


